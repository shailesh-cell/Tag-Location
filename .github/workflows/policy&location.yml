name: Azure Terraform Deployment

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Choose Terraform Action: apply or destroy"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy

permissions:
  id-token: write  # Required for OIDC authentication
  contents: read

jobs:
  terraform:
    name: Terraform Apply or Destroy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # ✅ Step 1: Login to Azure using OIDC
    - name: Login to Azure using OIDC
      uses: azure/login@v1.6.1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        allow-no-subscriptions: true

    # ✅ Step 2: Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      
    # ✅ Step 3: Configure Terraform for OIDC
    - name: Set Terraform Environment Variables
      run: |
        echo "ARM_USE_OIDC=true" >> $GITHUB_ENV
        echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

    # ✅ Step 4: Terraform Init
    - name: Initialize Terraform
      run: |
        terraform init \
          -backend-config="resource_group_name=terraform_tfstate_rg" \
          -backend-config="storage_account_name=terraformconfigsa" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=terraform.tfstate"

    # ✅ Step 5: Terraform Plan
    - name: Terraform Plan
      run: |
        terraform plan -out=plan.tfplan -var-file="terraform.tfvars"

    # ✅ Step 6: Upload Terraform Plan Artifact
    - name: Upload Terraform Plan Artifact
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: plan.tfplan
        retention-days: 5  # Keep the artifact for 5 days

    # ✅ Step 7: Apply or Destroy Based on User Input
    - name: Terraform Apply or Destroy
      run: |
        if [ "${{ github.event.inputs.action }}" == "apply" ]; then
          terraform apply -auto-approve plan.tfplan
        elif [ "${{ github.event.inputs.action }}" == "destroy" ]; then
          terraform destroy -auto-approve
        else
          echo "Invalid action specified. Use 'apply' or 'destroy'."
          exit 1
        fi
